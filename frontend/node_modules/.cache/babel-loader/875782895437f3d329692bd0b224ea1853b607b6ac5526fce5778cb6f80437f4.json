{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Корзина\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cart, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.product_id\n    }, _toDisplayString(item.name) + \" x \" + _toDisplayString(item.quantity), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.cart.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Корзина пуста\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","cart","item","product_id","name","_toDisplayString","quantity","length","_hoisted_1","_createCommentVNode"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\components\\CartPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Корзина</h1>\r\n    <ul>\r\n      <li v-for=\"item in cart\" :key=\"item.product_id\">\r\n        {{ item.name }} x {{ item.quantity }}\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"cart.length === 0\">Корзина пуста</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cart: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getCart()\r\n  },\r\n  methods: {\r\n    getCart() {\r\n      axios.get('http://127.0.0.1:5000/api/cart', { withCredentials: true })\r\n        .then(response => {\r\n          this.cart = response.data.cart\r\n        })\r\n        .catch(error => {\r\n          console.error(error)\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.cart {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  position: absolute;\r\n  top: 50px; /* Позиция корзины */\r\n  right: 20px; /* Позиция корзины */\r\n  background-color: white;\r\n  z-index: 1000; /* Чтобы корзина была поверх других элементов */\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAQM,c,0BAPJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QANXC,WAAA,CAIyBC,KAAA,CAAAC,IAAI,EAAZC,IAAI;yBAAfN,mBAAA,CAEK;MAFqBD,GAAG,EAAEO,IAAI,CAACC;wBAC/BD,IAAI,CAACE,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGH,IAAI,CAACI,QAAQ;oCAG3BN,KAAA,CAAAC,IAAI,CAACM,MAAM,U,cAAtBX,mBAAA,CAAiD,OARrDY,UAAA,EAQkC,eAAa,KAR/CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}