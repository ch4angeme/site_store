{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Cart = _resolveComponent(\"Cart\");\n  const _component_ProductItem = _resolveComponent(\"ProductItem\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Каталог продуктов\", -1 /* HOISTED */)), _createVNode(_component_Cart, {\n    cart: $data.cart,\n    onRemove: $options.removeFromCart\n  }, null, 8 /* PROPS */, [\"cart\", \"onRemove\"]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductItem, {\n      key: product.id,\n      product: product,\n      onAdd: $options.addToCart\n    }, null, 8 /* PROPS */, [\"product\", \"onAdd\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createVNode","_component_Cart","cart","$data","onRemove","$options","removeFromCart","_hoisted_1","_Fragment","_renderList","products","product","_createBlock","_component_ProductItem","key","id","onAdd","addToCart"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\ProductsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Каталог продуктов</h1>\r\n    <Cart :cart=\"cart\" @remove=\"removeFromCart\" />\r\n    <div class=\"product-list\">\r\n      <ProductItem\r\n        v-for=\"product in products\"\r\n        :key=\"product.id\"\r\n        :product=\"product\"\r\n        @add=\"addToCart\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // Импортируем axios для выполнения HTTP-запросов\r\nimport ProductItem from '../components/ProductItem.vue';\r\nimport Cart from '../components/CartPage.vue';\r\n\r\nexport default {\r\n  components: {\r\n    ProductItem,\r\n    Cart,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [], // Изменяем на пустой массив\r\n      cart: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('https://example.com/api/products'); // Замените на ваш API\r\n        this.products = response.data; // Предполагаем, что данные возвращаются в формате массива\r\n      } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n      }\r\n    },\r\n    addToCart(product) {\r\n      this.cart.push(product);\r\n    },\r\n    removeFromCart(product) {\r\n      this.cart = this.cart.filter(item => item.id !== product.id);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // Вызываем метод для получения данных при монтировании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n</style>"],"mappings":";;EAISA,KAAK,EAAC;AAAc;;;;uBAH3BC,mBAAA,CAWM,c,0BAVJC,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBC,YAAA,CAA8CC,eAAA;IAAvCC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,QAAM,EAAEC,QAAA,CAAAC;iDAC5BP,mBAAA,CAOM,OAPNQ,UAOM,I,kBANJT,mBAAA,CAKEU,SAAA,QAVRC,WAAA,CAM0BN,KAAA,CAAAO,QAAQ,EAAnBC,OAAO;yBADhBC,YAAA,CAKEC,sBAAA;MAHCC,GAAG,EAAEH,OAAO,CAACI,EAAE;MACfJ,OAAO,EAAEA,OAAO;MAChBK,KAAG,EAAEX,QAAA,CAAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}