{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  async created() {\n    await this.fetchCart();\n  },\n  methods: {\n    async fetchCart() {\n      const token = localStorage.getItem('access_token');\n      try {\n        const response = await axios.get('http://localhost:5000/api/cart', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.cartItems = response.data.cart;\n      } catch (error) {\n        alert('Ошибка получения корзины');\n      }\n    },\n    async removeFromCart(productId) {\n      const token = localStorage.getItem('access_token');\n      try {\n        await axios.delete(`http://localhost:5000/api/cart/remove/${productId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchCart(); // Обновляем корзину после удаления\n      } catch (error) {\n        alert('Ошибка удаления товара из корзины');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","created","fetchCart","methods","token","localStorage","getItem","response","get","headers","Authorization","cart","error","alert","removeFromCart","productId","delete"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\components\\CartPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Корзина</h2>\r\n    <ul>\r\n      <li v-for=\"item in cartItems\" :key=\"item.product_id\">\r\n        {{ item.name }} - {{ item.price }} $ (Количество: {{ item.quantity }})\r\n        <button @click=\"removeFromCart(item.product_id)\">Удалить</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchCart();\r\n  },\r\n  methods: {\r\n    async fetchCart() {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/cart', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.cartItems = response.data.cart;\r\n      } catch (error) {\r\n        alert('Ошибка получения корзины');\r\n      }\r\n    },\r\n    async removeFromCart(productId) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/cart/remove/${productId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        await this.fetchCart(); // Обновляем корзину после удаления\r\n      } catch (error) {\r\n        alert('Ошибка удаления товара из корзины');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.cart {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  position: absolute;\r\n  top: 50px; /* Позиция корзины */\r\n  right: 20px; /* Позиция корзины */\r\n  background-color: white;\r\n  z-index: 1000; /* Чтобы корзина была поверх других элементов */\r\n}\r\n</style>"],"mappings":"AAaA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,EAAE;UACjEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACJ,SAAQ,GAAIO,QAAQ,CAACR,IAAI,CAACY,IAAI;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdC,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IACD,MAAMC,cAAcA,CAACC,SAAS,EAAE;MAC9B,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAI;QACF,MAAMR,KAAK,CAACkB,MAAM,CAAC,yCAAyCD,SAAS,EAAE,EAAE;UACvEN,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACF,MAAM,IAAI,CAACF,SAAS,CAAC,CAAC,EAAE;MAC1B,EAAE,OAAOU,KAAK,EAAE;QACdC,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}