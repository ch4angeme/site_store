{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  components: {\n    ProductItem,\n    Cart\n  },\n  data() {\n    return {\n      products: [],\n      // Изначально массив продуктов пуст\n      cart: []\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('https://example.com/api/products'); // Замените на ваш API\n        // Извлекаем массив продуктов из поля results\n        this.products = response.data.results || []; // Если results нет, устанавливаем пустой массив\n      } catch (error) {\n        console.error('Ошибка при получении данных:', error);\n        // Можно добавить обработку ошибки, например, уведомление пользователя\n      }\n    },\n    addToCart(product) {\n      this.cart.push(product);\n    },\n    removeFromCart(product) {\n      this.cart = this.cart.filter(item => item.id !== product.id);\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // Вызываем метод для получения данных при монтировании компонента\n  }\n};","map":{"version":3,"names":["components","ProductItem","Cart","data","products","cart","methods","fetchProducts","response","axios","get","results","error","console","addToCart","product","push","removeFromCart","filter","item","id","mounted"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Авторизация</h2>\r\n    <form @submit.prevent=\"submitForm\">\r\n      <div>\r\n        <label for=\"name\">Имя: </label>\r\n        <input type=\"text\" v-model=\"formData.name\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Пароль: </label>\r\n        <input type=\"password\" v-model=\"formData.email\" required />\r\n      </div>\r\n      <button type=\"submit\">Отправить</button>\r\n    </form>\r\n    <div>\r\n      <p>Еще не зарегистрированы?</p>\r\n    </div>\r\n    <div>\r\n      <ul>\r\n        <li><router-link to=\"/registration\">Нажмите сюда</router-link></li>\r\n      </ul>\r\n    </div>\r\n    <div v-if=\"responseMessage\">\r\n      <p>Ответ сервера: {{ responseMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  components: {\r\n    ProductItem,\r\n    Cart,\r\n  },\r\n  data() {\r\n    return {\r\n      products: [], // Изначально массив продуктов пуст\r\n      cart: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('https://example.com/api/products'); // Замените на ваш API\r\n        // Извлекаем массив продуктов из поля results\r\n        this.products = response.data.results || []; // Если results нет, устанавливаем пустой массив\r\n      } catch (error) {\r\n        console.error('Ошибка при получении данных:', error);\r\n        // Можно добавить обработку ошибки, например, уведомление пользователя\r\n      }\r\n    },\r\n    addToCart(product) {\r\n      this.cart.push(product);\r\n    },\r\n    removeFromCart(product) {\r\n      this.cart = this.cart.filter(item => item.id !== product.id);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // Вызываем метод для получения данных при монтировании компонента\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n\r\ndiv {\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  background-color: #3a3a3a;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #757575;\r\n}\r\n</style>"],"mappings":";;;AA6BA,eAAe;EACbA,UAAU,EAAE;IACVC,WAAW;IACXC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAC,kCAAkC,CAAC,EAAE;QACtE;QACA,IAAI,CAACN,QAAO,GAAII,QAAQ,CAACL,IAAI,CAACQ,OAAM,IAAK,EAAE,EAAE;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD;MACF;IACF,CAAC;IACDE,SAASA,CAACC,OAAO,EAAE;MACjB,IAAI,CAACV,IAAI,CAACW,IAAI,CAACD,OAAO,CAAC;IACzB,CAAC;IACDE,cAAcA,CAACF,OAAO,EAAE;MACtB,IAAI,CAACV,IAAG,GAAI,IAAI,CAACA,IAAI,CAACa,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,EAAC,KAAML,OAAO,CAACK,EAAE,CAAC;IAC9D;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACd,aAAa,CAAC,CAAC,EAAE;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}