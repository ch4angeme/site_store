{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      showCart: false\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n    await this.fetchCart();\n  },\n  methods: {\n    async fetchProducts() {\n      const response = await axios.get('http://localhost:5000/api/all_products');\n      this.products = response.data.results;\n    },\n    async fetchCart() {\n      const token = localStorage.getItem('access_token');\n      try {\n        const response = await axios.get('http://localhost:5000/api/cart', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.cartItems = response.data.cart;\n      } catch (error) {\n        console.error('Ошибка получения корзины', error);\n      }\n    },\n    async addToCart(productId) {\n      const token = localStorage.getItem('access_token');\n      try {\n        await axios.post('http://localhost:5000/api/cart/add', {\n          product_id: productId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchCart(); // Обновляем корзину после добавления товара\n      } catch (error) {\n        alert('Ошибка добавления товара в корзину');\n      }\n    },\n    async removeFromCart(productId) {\n      const token = localStorage.getItem('access_token');\n      try {\n        await axios.delete(`http://localhost:5000/api/cart/remove/${productId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchCart(); // Обновляем корзину после удаления\n      } catch (error) {\n        alert('Ошибка удаления товара из корзины');\n      }\n    },\n    toggleCart() {\n      this.showCart = !this.showCart;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","cartItems","showCart","created","fetchProducts","fetchCart","methods","response","get","results","token","localStorage","getItem","headers","Authorization","cart","error","console","addToCart","productId","post","product_id","alert","removeFromCart","delete","toggleCart"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\ProductsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Продукты</h2>\r\n    <button @click=\"toggleCart\">{{ showCart ? 'Скрыть корзину' : 'Показать корзину' }}</button>\r\n\r\n    <ul class=\"product-list\">\r\n      <li v-for=\"product in products\" :key=\"product.id\">\r\n        {{ product.name }} - {{ product.price }} руб.\r\n        <button @click=\"addToCart(product.id)\">Добавить в корзину</button>\r\n      </li>\r\n    </ul>\r\n\r\n    <div v-if=\"showCart\" class=\"cart\">\r\n      <h3>Корзина</h3>\r\n      <ul>\r\n        <li v-for=\"item in cartItems\" :key=\"item.product_id\">\r\n          {{ item.name }} - {{ item.price }} руб. (Количество: {{ item.quantity }})\r\n          <button @click=\"removeFromCart(item.product_id)\">Удалить</button>\r\n        </li>\r\n      </ul>\r\n      <p v-if=\"cartItems.length === 0\">Корзина пуста.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      cartItems: [],\r\n      showCart: false,\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchProducts();\r\n    await this.fetchCart();\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      const response = await axios.get('http://localhost:5000/api/all_products');\r\n      this.products = response.data.results;\r\n    },\r\n    async fetchCart() {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/cart', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.cartItems = response.data.cart;\r\n      } catch (error) {\r\n        console.error('Ошибка получения корзины', error);\r\n      }\r\n    },\r\n    async addToCart(productId) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.post('http://localhost:5000/api/cart/add', { product_id: productId }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        await this.fetchCart(); // Обновляем корзину после добавления товара\r\n      } catch (error) {\r\n        alert('Ошибка добавления товара в корзину');\r\n      }\r\n    },\r\n    async removeFromCart(productId) {\r\n      const token = localStorage.getItem('access_token');\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/cart/remove/${productId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        await this.fetchCart(); // Обновляем корзину после удаления\r\n      } catch (error) {\r\n        alert('Ошибка удаления товара из корзины');\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.showCart = !this.showCart;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-left: 50px; /* Изменено для лучшего отображения */\r\n  margin-right: 50px; /* Изменено для лучшего отображения */\r\n  list-style-type: none; /* Убираем маркеры списка */\r\n  padding: 0; /* Убираем отступы */\r\n}\r\n\r\n.product-list li {\r\n  margin: 10px; /* Отступы между товарами */\r\n  padding: 10px;\r\n  border: 1px solid #ccc; /* Граница для каждого товара */\r\n  border-radius: 5px; /* Закругленные углы */\r\n  width: 200px; /* Ширина элемента списка */\r\n  text-align: center; /* Центрирование текста */\r\n}\r\n\r\n.cart {\r\n  margin-top: 20px; /* Отступ сверху для корзины */\r\n  border: 1px solid #ccc; /* Граница для корзины */\r\n  padding: 10px; /* Отступы внутри корзины */\r\n  border-radius: 5px; /* Закругленные углы */\r\n}\r\n</style>"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;IAC1B,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,aAAaA,CAAA,EAAG;MACpB,MAAMG,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,wCAAwC,CAAC;MAC1E,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACR,IAAI,CAACU,OAAO;IACvC,CAAC;IACD,MAAMJ,SAASA,CAAA,EAAG;MAChB,MAAMK,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAI;QACF,MAAML,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,EAAE;UACjEK,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACT,SAAQ,GAAIM,QAAQ,CAACR,IAAI,CAACgB,IAAI;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAME,SAASA,CAACC,SAAS,EAAE;MACzB,MAAMT,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAI;QACF,MAAMd,KAAK,CAACsB,IAAI,CAAC,oCAAoC,EAAE;UAAEC,UAAU,EAAEF;QAAU,CAAC,EAAE;UAChFN,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,KAAK;UAChC;QACF,CAAC,CAAC;QACF,MAAM,IAAI,CAACL,SAAS,CAAC,CAAC,EAAE;MAC1B,EAAE,OAAOW,KAAK,EAAE;QACdM,KAAK,CAAC,oCAAoC,CAAC;MAC7C;IACF,CAAC;IACD,MAAMC,cAAcA,CAACJ,SAAS,EAAE;MAC9B,MAAMT,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAI;QACF,MAAMd,KAAK,CAAC0B,MAAM,CAAC,yCAAyCL,SAAS,EAAE,EAAE;UACvEN,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,KAAK;UAChC;QACF,CAAC,CAAC;QACF,MAAM,IAAI,CAACL,SAAS,CAAC,CAAC,EAAE;MAC1B,EAAE,OAAOW,KAAK,EAAE;QACdM,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,IAAI,CAACvB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}