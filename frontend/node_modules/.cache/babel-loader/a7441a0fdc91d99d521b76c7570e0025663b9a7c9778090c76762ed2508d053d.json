{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    isAuthenticated: false,\n    user: null\n  },\n  mutations: {\n    setAuth(state, payload) {\n      state.isAuthenticated = payload.isAuthenticated;\n      state.user = payload.user;\n    }\n  },\n  actions: {\n    async checkAuth({\n      commit\n    }) {\n      try {\n        const response = await fetch('https://api.example.com/auth/check'); // Замените на ваш API\n        const data = await response.json();\n        if (data.isAuthenticated) {\n          commit('setAuth', {\n            isAuthenticated: true,\n            user: data.user\n          });\n        } else {\n          commit('setAuth', {\n            isAuthenticated: false,\n            user: null\n          });\n        }\n      } catch (error) {\n        console.error('Ошибка при проверке авторизации:', error);\n        commit('setAuth', {\n          isAuthenticated: false,\n          user: null\n        });\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","isAuthenticated","user","mutations","setAuth","payload","actions","checkAuth","commit","response","fetch","data","json","error","console"],"sources":["D:/JetBrains/PROJECTPY/cite_store/frontend/src/store.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    isAuthenticated: false,\r\n    user: null,\r\n  },\r\n  mutations: {\r\n    setAuth(state, payload) {\r\n      state.isAuthenticated = payload.isAuthenticated;\r\n      state.user = payload.user;\r\n    },\r\n  },\r\n  actions: {\r\n    async checkAuth({ commit }) {\r\n      try {\r\n        const response = await fetch('https://api.example.com/auth/check'); // Замените на ваш API\r\n        const data = await response.json();\r\n\r\n        if (data.isAuthenticated) {\r\n          commit('setAuth', { isAuthenticated: true, user: data.user });\r\n        } else {\r\n          commit('setAuth', { isAuthenticated: false, user: null });\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при проверке авторизации:', error);\r\n        commit('setAuth', { isAuthenticated: false, user: null });\r\n      }\r\n    },\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACJ,KAAK,EAAEK,OAAO,EAAE;MACtBL,KAAK,CAACC,eAAe,GAAGI,OAAO,CAACJ,eAAe;MAC/CD,KAAK,CAACE,IAAI,GAAGG,OAAO,CAACH,IAAI;IAC3B;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACV,eAAe,EAAE;UACxBO,MAAM,CAAC,SAAS,EAAE;YAAEP,eAAe,EAAE,IAAI;YAAEC,IAAI,EAAES,IAAI,CAACT;UAAK,CAAC,CAAC;QAC/D,CAAC,MAAM;UACLM,MAAM,CAAC,SAAS,EAAE;YAAEP,eAAe,EAAE,KAAK;YAAEC,IAAI,EAAE;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDL,MAAM,CAAC,SAAS,EAAE;UAAEP,eAAe,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC;MAC3D;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}