{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios'; // import axios for execution HTTP-requests\nimport Cart from '../components/CartPage.vue';\nexport default {\n  components: {\n    Cart\n  },\n  data() {\n    return {\n      isCartVisible: false,\n      products: [],\n      // empty mass for products\n      cart: []\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/all_products'); // get-request for server\n        this.products = response.data.results || []; // catch the api and take data\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    toggleCart() {\n      this.isCartVisible = !this.isCartVisible;\n    },\n    async addToCart(item) {\n      try {\n        await axios.post('http://localhost:5000/api/cart/add', {\n          product_id: productId\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.cart.push(item);\n      } catch (error) {\n        console.error(\"Ошибка при добавлении товара в корзину:\", error);\n      }\n    },\n    removeFromCart(item) {\n      this.cart = this.cart.filter(cartItem => cartItem.id !== item.id);\n    }\n  },\n  mounted() {\n    this.fetchProducts(); // calling the method for getting api with products\n  }\n};","map":{"version":3,"names":["axios","Cart","components","data","isCartVisible","products","cart","methods","fetchProducts","response","get","results","error","console","toggleCart","addToCart","item","post","product_id","productId","headers","Authorization","localStorage","getItem","push","removeFromCart","filter","cartItem","id","mounted"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\ProductsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Каталог товаров</h1>\r\n    <button @click=\"toggleCart\">{{ isCartVisible ? 'Скрыть корзину' : 'Показать корзину' }}</button>\r\n\r\n    <Cart\r\n      v-if=\"isCartVisible\"\r\n      :cart=\"cart\"\r\n      @remove=\"removeFromCart\"\r\n      @close=\"toggleCart\"\r\n    />\r\n\r\n    <ul class=\"product-list\">\r\n      <li v-for=\"item in products\" :key=\"item.id\">\r\n        {{ item.name }} - {{ item.price }} рублей\r\n        <button @click=\"addToCart(item)\">Добавить в корзину</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // import axios for execution HTTP-requests\r\nimport Cart from '../components/CartPage.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Cart,\r\n  },\r\n  data() {\r\n    return {\r\n      isCartVisible: false,\r\n      products: [], // empty mass for products\r\n      cart: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/all_products'); // get-request for server\r\n        this.products = response.data.results || []; // catch the api and take data\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    },\r\n    toggleCart() {\r\n      this.isCartVisible = !this.isCartVisible;\r\n    },\r\n    async addToCart(item) {\r\n      try {\r\n        await axios.post('http://localhost:5000/api/cart/add', {\r\n          product_id: productId\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.cart.push(item);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при добавлении товара в корзину:\", error);\r\n      }\r\n    },\r\n    removeFromCart(item) {\r\n      this.cart = this.cart.filter(cartItem => cartItem.id !== item.id);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchProducts(); // calling the method for getting api with products\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-left: 50px; /* Изменено для лучшего отображения */\r\n  margin-right: 50px; /* Изменено для лучшего отображения */\r\n  list-style-type: none; /* Убираем маркеры списка */\r\n  padding: 0; /* Убираем отступы */\r\n}\r\n\r\n.product-list li {\r\n  margin: 10px; /* Отступы между товарами */\r\n  padding: 10px;\r\n  border: 1px solid #ccc; /* Граница для каждого товара */\r\n  border-radius: 5px; /* Закругленные углы */\r\n  width: 200px; /* Ширина элемента списка */\r\n  text-align: center; /* Центрирование текста */\r\n}\r\n</style>"],"mappings":";;;AAsBA,OAAOA,KAAI,MAAO,OAAO,EAAE;AAC3B,OAAOC,IAAG,MAAO,4BAA4B;AAE7C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE,EAAE;MAAE;MACdC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,wCAAwC,CAAC,EAAE;QAC5E,IAAI,CAACL,QAAO,GAAII,QAAQ,CAACN,IAAI,CAACQ,OAAM,IAAK,EAAE,EAAE;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACV,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C,CAAC;IACD,MAAMW,SAASA,CAACC,IAAI,EAAE;MACpB,IAAI;QACF,MAAMhB,KAAK,CAACiB,IAAI,CAAC,oCAAoC,EAAE;UACrDC,UAAU,EAAEC;QACd,CAAC,EAAE;UACDC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QACF,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAACR,IAAI,CAAC;MACtB,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IACDa,cAAcA,CAACT,IAAI,EAAE;MACnB,IAAI,CAACV,IAAG,GAAI,IAAI,CAACA,IAAI,CAACoB,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACC,EAAC,KAAMZ,IAAI,CAACY,EAAE,CAAC;IACnE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,aAAa,CAAC,CAAC,EAAE;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}