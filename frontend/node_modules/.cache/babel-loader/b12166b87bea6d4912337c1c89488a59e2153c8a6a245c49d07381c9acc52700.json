{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      user: null,\n      error: null\n    };\n  },\n  async created() {\n    await this.Profile();\n  },\n  methods: {\n    async Profile() {\n      try {\n        const token = localStorage.getItem('access_token');\n        const response = await axios.get('http://localhost:5000/api/users/user/profile', {\n          headers: {\n            Authorization: `Bearer ${token}` // Передаем токен в заголовках\n          }\n        });\n        this.user = response.data; // Устанавливаем данные пользователя\n      } catch (error) {\n        if (error.response && error.response.data) {\n          this.error = error.response.data.message || 'Ошибка получения данных профиля';\n        } else {\n          this.error = 'Ошибка соединения с сервером';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","error","created","Profile","methods","token","localStorage","getItem","response","get","headers","Authorization","message"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Профиль пользователя</h2>\r\n    <div v-if=\"user\">\r\n      <p><strong>Имя пользователя:</strong> {{ user.username }}</p>\r\n    </div>\r\n    <div v-else-if=\"error\">\r\n      <p>{{ error }}</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Загрузка...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      error: null,\r\n    };\r\n  },\r\n  async created() {\r\n    await this.Profile();\r\n  },\r\n  methods: {\r\n    async Profile() {\r\n      try {\r\n        const token = localStorage.getItem('access_token');\r\n        const response = await axios.get('http://localhost:5000/api/users/user/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Передаем токен в заголовках\r\n          },\r\n        });\r\n        this.user = response.data; // Устанавливаем данные пользователя\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          this.error = error.response.data.message || 'Ошибка получения данных профиля';\r\n        } else {\r\n          this.error = 'Ошибка соединения с сервером';\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для страницы профиля */\r\nh2 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\np {\r\n  margin: 5px 0;\r\n}\r\n</style>"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,OAAO,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QAClD,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,8CAA8C,EAAE;UAC/EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;UACpC;QACF,CAAC,CAAC;QACF,IAAI,CAACL,IAAG,GAAIQ,QAAQ,CAACT,IAAI,EAAE;MAC7B,EAAE,OAAOE,KAAK,EAAE;QACd,IAAIA,KAAK,CAACO,QAAO,IAAKP,KAAK,CAACO,QAAQ,CAACT,IAAI,EAAE;UACzC,IAAI,CAACE,KAAI,GAAIA,KAAK,CAACO,QAAQ,CAACT,IAAI,CAACa,OAAM,IAAK,iCAAiC;QAC/E,OAAO;UACL,IAAI,CAACX,KAAI,GAAI,8BAA8B;QAC7C;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}