{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'PostForm',\n  data() {\n    return {\n      formData: {\n        name: '',\n        password: ''\n      },\n      responseMessage: '',\n      accessToken: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Отправка данных формы на сервер для входа\n        const response = await axios.post('http://127.0.0.1:5000/api/users/user/login', this.formData);\n\n        // Проверяем, успешен ли вход\n        if (response.data.access_token) {\n          // Сохраняем токен в локальном хранилище\n          localStorage.setItem('access_token', response.data.access_token);\n\n          // Сохраняем имя пользователя в локальном хранилище\n          localStorage.setItem('username', response.data.username);\n\n          // Устанавливаем сообщение о входе\n          this.responseMessage = response.data.message;\n\n          // Здесь можно перенаправить пользователя на другую страницу, если это необходимо\n          this.$router.push('/'); // Например, на главную страницу\n        } else {\n          // Обработка неуспешного входа\n          this.responseMessage = response.data.message;\n        }\n      } catch (error) {\n        console.error('Ошибка при отправке данных:', error);\n        this.responseMessage = 'Ошибка при отправке данных';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formData","password","responseMessage","accessToken","methods","submitForm","response","post","access_token","localStorage","setItem","username","message","$router","push","error","console"],"sources":["D:\\JetBrains\\PROJECTPY\\cite_store\\frontend\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Авторизация</h2>\r\n    <form @submit.prevent=\"submitForm\">\r\n      <div>\r\n        <label for=\"name\">Имя: </label>\r\n        <input type=\"text\" v-model=\"formData.name\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Пароль: </label>\r\n        <input type=\"password\" v-model=\"formData.password\" required />\r\n      </div>\r\n      <button type=\"submit\">Войти</button>\r\n    </form>\r\n    <div>\r\n      <p>Еще не зарегистрированы?</p>\r\n    </div>\r\n    <div>\r\n      <ul>\r\n        <li><router-link to=\"/registration\">Нажмите сюда</router-link></li>\r\n      </ul>\r\n    </div>\r\n    <div v-if=\"responseMessage\">\r\n      <p>{{ responseMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'PostForm',\r\n  data() {\r\n    return {\r\n      formData: {\r\n        name: '',\r\n        password: '',\r\n      },\r\n      responseMessage: '',\r\n      accessToken: '',\r\n    };\r\n  },\r\n  methods: {\r\n  async submitForm() {\r\n    try {\r\n      // Отправка данных формы на сервер для входа\r\n      const response = await axios.post('http://127.0.0.1:5000/api/users/user/login', this.formData);\r\n\r\n      // Проверяем, успешен ли вход\r\n      if (response.data.access_token) {\r\n        // Сохраняем токен в локальном хранилище\r\n        localStorage.setItem('access_token', response.data.access_token);\r\n\r\n        // Сохраняем имя пользователя в локальном хранилище\r\n        localStorage.setItem('username', response.data.username);\r\n\r\n        // Устанавливаем сообщение о входе\r\n        this.responseMessage = response.data.message;\r\n\r\n        // Здесь можно перенаправить пользователя на другую страницу, если это необходимо\r\n        this.$router.push('/'); // Например, на главную страницу\r\n      } else {\r\n        // Обработка неуспешного входа\r\n        this.responseMessage = response.data.message;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных:', error);\r\n      this.responseMessage = 'Ошибка при отправке данных';\r\n    }\r\n  },\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n\r\ndiv {\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  background-color: #3a3a3a;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #757575;\r\n}\r\n</style>"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRF,IAAI,EAAE,EAAE;QACRG,QAAQ,EAAE;MACZ,CAAC;MACDC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,4CAA4C,EAAE,IAAI,CAACP,QAAQ,CAAC;;QAE9F;QACA,IAAIM,QAAQ,CAACP,IAAI,CAACS,YAAY,EAAE;UAC9B;UACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,QAAQ,CAACP,IAAI,CAACS,YAAY,CAAC;;UAEhE;UACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAACP,IAAI,CAACY,QAAQ,CAAC;;UAExD;UACA,IAAI,CAACT,eAAc,GAAII,QAAQ,CAACP,IAAI,CAACa,OAAO;;UAE5C;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1B,OAAO;UACL;UACA,IAAI,CAACZ,eAAc,GAAII,QAAQ,CAACP,IAAI,CAACa,OAAO;QAC9C;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAI,CAACb,eAAc,GAAI,4BAA4B;MACrD;IACF;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}