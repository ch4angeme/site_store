{"ast":null,"code":"import HomePage from '../views/HomePage.vue';\nimport LoginPage from '../views/LoginPage.vue';\nimport ProductsPage from '../views/ProductsPage.vue';\nimport RegistrationPage from '../views/RegistrationPage.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomePage\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginPage\n}, {\n  path: '/catalog',\n  name: 'Catalog',\n  component: ProductsPage\n}, {\n  path: '/registration',\n  name: 'Registration',\n  component: RegistrationPage\n}];\nasync function checkAuthentication() {\n  try {\n    const response = await axios.get('http://127.0.0.1:5000/api/users/user/status', {\n      withCredentials: true\n    });\n    return response.status === 200;\n  } catch (error) {\n    return false; // Не аутентифицирован\n  }\n}\n\n// Создаем маршрутизатор\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Глобальный навигационный охранник\nrouter.beforeEach(async (to, from, next) => {\n  const isAuthenticated = await checkAuthentication();\n  if (to.path !== '/login' && !isAuthenticated) {\n    next('/login'); // Перенаправление на страницу входа, если не аутентифицирован\n  } else {\n    next(); // Продолжить навигацию\n  }\n});\nexport default router;","map":{"version":3,"names":["HomePage","LoginPage","ProductsPage","RegistrationPage","createRouter","createWebHistory","routes","path","name","component","checkAuthentication","response","axios","get","withCredentials","status","error","router","history","beforeEach","to","from","next","isAuthenticated"],"sources":["D:/JetBrains/PROJECTPY/cite_store/frontend/src/router/index.js"],"sourcesContent":["import HomePage from '../views/HomePage.vue';\r\nimport LoginPage from '../views/LoginPage.vue';\r\nimport ProductsPage from '../views/ProductsPage.vue';\r\nimport RegistrationPage from '../views/RegistrationPage.vue';\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomePage,\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: LoginPage,\r\n  },\r\n    {\r\n    path: '/catalog',\r\n    name: 'Catalog',\r\n    component: ProductsPage,\r\n  },\r\n    {\r\n    path: '/registration',\r\n    name: 'Registration',\r\n    component: RegistrationPage,\r\n  },\r\n];\r\n\r\nasync function checkAuthentication() {\r\n  try {\r\n    const response = await axios.get('http://127.0.0.1:5000/api/users/user/status', { withCredentials: true });\r\n    return response.status === 200;\r\n  } catch (error) {\r\n    return false; // Не аутентифицирован\r\n  }\r\n}\r\n\r\n// Создаем маршрутизатор\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n// Глобальный навигационный охранник\r\nrouter.beforeEach(async (to, from, next) => {\r\n  const isAuthenticated = await checkAuthentication();\r\n  if (to.path !== '/login' && !isAuthenticated) {\r\n    next('/login'); // Перенаправление на страницу входа, если не аутентифицирован\r\n  } else {\r\n    next(); // Продолжить навигацию\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAG3D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER;AACb,CAAC,EACC;EACAM,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP;AACb,CAAC,EACC;EACAK,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEN;AACb,CAAC,CACF;AAED,eAAeO,mBAAmBA,CAAA,EAAG;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,6CAA6C,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC;IAC1G,OAAOH,QAAQ,CAACI,MAAM,KAAK,GAAG;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,KAAK,CAAC,CAAC;EAChB;AACF;;AAEA;AACA,MAAMC,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BC;AACF,CAAC,CAAC;;AAEF;AACAW,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAMC,eAAe,GAAG,MAAMb,mBAAmB,CAAC,CAAC;EACnD,IAAIU,EAAE,CAACb,IAAI,KAAK,QAAQ,IAAI,CAACgB,eAAe,EAAE;IAC5CD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}